// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoviesApp.Models;

namespace MoviesApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932");

            modelBuilder.Entity("MoviesApp.Models.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Artist");

                    b.Property<DateTime>("DateOfRecording");

                    b.Property<string>("Featuring");

                    b.Property<string>("Genre");

                    b.Property<decimal>("Length");

                    b.Property<string>("MusicDirector");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("MoviesApp.Models.GoodMovie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("ProducerId");

                    b.Property<int>("StudioId");

                    b.HasKey("Id");

                    b.HasIndex("ProducerId");

                    b.HasIndex("StudioId");

                    b.ToTable("GoodMovies");
                });

            modelBuilder.Entity("MoviesApp.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AlbumId");

                    b.Property<int>("BOCollection");

                    b.Property<int>("Budget");

                    b.Property<DateTime?>("DateLastPlayed");

                    b.Property<DateTime>("DateofRelease");

                    b.Property<bool>("Isrecommended");

                    b.Property<string>("Name");

                    b.Property<int>("ProducerId");

                    b.Property<int>("Rating");

                    b.Property<int>("StudioId");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.HasIndex("ProducerId");

                    b.HasIndex("StudioId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("MoviesApp.Models.Producer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool?>("Isreputed");

                    b.Property<string>("Name");

                    b.Property<int>("NoOfMoviesProduced");

                    b.HasKey("Id");

                    b.ToTable("Producers");
                });

            modelBuilder.Entity("MoviesApp.Models.Studio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Area");

                    b.Property<int>("FoundedIn");

                    b.Property<string>("Location");

                    b.Property<string>("Name");

                    b.Property<int>("NoOfMoviesShot");

                    b.HasKey("Id");

                    b.ToTable("Studios");
                });

            modelBuilder.Entity("MoviesApp.Models.GoodMovie", b =>
                {
                    b.HasOne("MoviesApp.Models.Producer", "Producer")
                        .WithMany("GoodMovies")
                        .HasForeignKey("ProducerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MoviesApp.Models.Studio", "Studio")
                        .WithMany("GoodMovies")
                        .HasForeignKey("StudioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MoviesApp.Models.Movie", b =>
                {
                    b.HasOne("MoviesApp.Models.Album", "Album")
                        .WithMany("Movies")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MoviesApp.Models.Producer", "Producer")
                        .WithMany("Movies")
                        .HasForeignKey("ProducerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MoviesApp.Models.Studio", "Studio")
                        .WithMany("Movies")
                        .HasForeignKey("StudioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
